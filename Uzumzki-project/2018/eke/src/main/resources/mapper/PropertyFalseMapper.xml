<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyi.ssm.dao.PropertyFalseMapper">
	<resultMap id="BaseResultMap" type="com.xiaoyi.ssm.model.PropertyFalse">
		<id column="ID" jdbcType="CHAR" property="id" />
		<result column="CreateTime" jdbcType="TIMESTAMP" property="createtime" />
		<result column="Source" jdbcType="CHAR" property="source" />
		<result column="FounderID" jdbcType="CHAR" property="founderid" />
		<result column="PropertyID" jdbcType="CHAR" property="propertyid" />
		<result column="Type" jdbcType="CHAR" property="type" />
		<result column="Note" jdbcType="VARCHAR" property="note" />
	</resultMap>
	
	<sql id="Base_Column_List">
		ID, CreateTime, Source, FounderID, PropertyID, Type, Note
	</sql>
	
	<select id="countByProperty" parameterType="java.lang.String" resultType="Integer">
		select COUNT(0) from PropertyFalse where PropertyID = #{id,jdbcType=CHAR}
	</select>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from PropertyFalse
		where ID = #{id,jdbcType=CHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from PropertyFalse
		where ID = #{id,jdbcType=CHAR}
	</delete>
	<insert id="insert" parameterType="com.xiaoyi.ssm.model.PropertyFalse">
		insert into PropertyFalse (ID, CreateTime, Source,
		FounderID, PropertyID, Type,
		Note)
		values (#{id,jdbcType=CHAR}, #{createtime,jdbcType=TIMESTAMP}, #{source,jdbcType=CHAR},
		#{founderid,jdbcType=CHAR}, #{propertyid,jdbcType=CHAR}, #{type,jdbcType=CHAR},
		#{note,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.xiaoyi.ssm.model.PropertyFalse">
		insert into PropertyFalse
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="createtime != null">
				CreateTime,
			</if>
			<if test="source != null">
				Source,
			</if>
			<if test="founderid != null">
				FounderID,
			</if>
			<if test="propertyid != null">
				PropertyID,
			</if>
			<if test="type != null">
				Type,
			</if>
			<if test="note != null">
				Note,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=CHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="source != null">
				#{source,jdbcType=CHAR},
			</if>
			<if test="founderid != null">
				#{founderid,jdbcType=CHAR},
			</if>
			<if test="propertyid != null">
				#{propertyid,jdbcType=CHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=CHAR},
			</if>
			<if test="note != null">
				#{note,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.ssm.model.PropertyFalse">
		update PropertyFalse
		<set>
			<if test="createtime != null">
				CreateTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="source != null">
				Source = #{source,jdbcType=CHAR},
			</if>
			<if test="founderid != null">
				FounderID = #{founderid,jdbcType=CHAR},
			</if>
			<if test="propertyid != null">
				PropertyID = #{propertyid,jdbcType=CHAR},
			</if>
			<if test="type != null">
				Type = #{type,jdbcType=CHAR},
			</if>
			<if test="note != null">
				Note = #{note,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xiaoyi.ssm.model.PropertyFalse">
		update PropertyFalse
		set CreateTime = #{createtime,jdbcType=TIMESTAMP},
		Source = #{source,jdbcType=CHAR},
		FounderID = #{founderid,jdbcType=CHAR},
		PropertyID = #{propertyid,jdbcType=CHAR},
		Type = #{type,jdbcType=CHAR},
		Note = #{note,jdbcType=VARCHAR}
		where ID = #{id,jdbcType=CHAR}
	</update>
</mapper>