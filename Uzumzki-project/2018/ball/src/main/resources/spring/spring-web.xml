<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd"
>

	<!-- 激活组件扫描功能,扫描aop的相关组件组件 --><!-- 
	<context:component-scan base-package="com.xiaoyi.ssm.aop" /> -->
	<!-- 启动对@AspectJ注解的支持 --><!-- 
	<aop:aspectj-autoproxy proxy-target-class="true" /> -->

	<!--简化配置: 1、自动注册DefaultAnnotationHandlerMapping,AnnotationMethodHandlerAdapter 2、提供一系列:数据绑定,数字和日期的format,@NumberFormat,@DataTimeFormat,xml,json默认读写支持 -->
	<mvc:annotation-driven>
		<!-- 不使用默认的消息转换器 -->
		<mvc:message-converters register-defaults="false">
			<!-- 配置Spring的转换器 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
			<bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
			<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
			<!-- 配置fastjson中实现HttpMessageConverter接口的转换器 -->
			<bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<!-- 加入支持的媒体类型，返回contentType -->
				<property name="supportedMediaTypes">
					<list>
						<!--这里顺序不能反，一定要先写text/html，不然IE下会出现下载提示 -->
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
				<property name="features">
					<array>                    
						<!-- 下面配置，默认是false -->
						<value>WriteMapNullValue</value>
						<value>WriteNullNumberAsZero</value>
						<value>WriteNullListAsEmpty</value>
						<value>WriteNullStringAsEmpty</value>
						<value>WriteNullBooleanAsFalse</value>
						<value>WriteDateUseDateFormat</value>
					</array>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!--静态资源默认servlet配置 1、加入对静态资源的处理:js,css,gif,png 2、允许使用"/"做整体映射 -->
	<mvc:default-servlet-handler />

	<!--配置JSP 显示ViewResolver -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!--扫描web相关的controller -->
	<context:component-scan base-package="com.xiaoyi.ssm.controller" />

	<!--全局异常捕捉 -->
	<bean class="com.xiaoyi.ssm.exception.GlobalExceptionResolver" />

	<mvc:resources mapping="/Js/**" location="/Js/" />
	<mvc:resources mapping="/Css/**" location="/Css/" />
	<mvc:resources mapping="/Images/**" location="/Images/" />
	<mvc:resources mapping="/Font/**" location="/Font" />
	<mvc:resources mapping="/Picture/**" location="/Picture" />

	<mvc:interceptors>
		<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
		<!-- <mvc:interceptor> <mvc:mapping path="/**" /> <bean class="com.xiaoyi.ssm.interceptor.MemberApiInterceptor"></bean> 
			</mvc:interceptor> -->
		<mvc:interceptor>
			<mvc:mapping path="/admin/**" />
			<mvc:exclude-mapping path="/resource/**" />
			<mvc:exclude-mapping path="/pay/aliPayCallBack" />
			<mvc:exclude-mapping path="/pay/WeiXinPay" />
			<mvc:exclude-mapping path="/admin/common/login" />
			<mvc:exclude-mapping path="/admin/common/register" />
			<mvc:exclude-mapping path="/admin/common/test" />
			<mvc:exclude-mapping path="/admin/common/authLogin" />
			<mvc:exclude-mapping path="/admin/common/getSMSCode" />
			<mvc:exclude-mapping path="/admin/staff/login" />
			<mvc:exclude-mapping path="/admin/staff/register" />
			<mvc:exclude-mapping path="/admin/static/**" />
			<mvc:exclude-mapping path="/admin/css/**" />
			<mvc:exclude-mapping path="/api/**" />
			<mvc:exclude-mapping path="/managerapi/**" />
			<mvc:exclude-mapping path="/memberapi/**" />
			<mvc:exclude-mapping path="/*.txt" />
			<mvc:exclude-mapping path="/dist/**" />
			<bean class="com.xiaoyi.ssm.interceptor.AdminInterceptor"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/venue/**" />
			<mvc:exclude-mapping path="/venue/manager/order/weixinNotify" />
			<bean class="com.xiaoyi.ssm.interceptor.MemberApiInterceptor"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/wxapp/**" />
			<mvc:exclude-mapping path="/wxapp/common/**" />
			<mvc:exclude-mapping path="/wxapp/train/course/weixinNotify" />
			<mvc:exclude-mapping path="/wxapp/inviteBall/weixinNotify" />
			<mvc:exclude-mapping path="/wxapp/inviteBall/weixinAANotify" />
			<mvc:exclude-mapping path="/wxapp/train/common/**" />
			<bean class="com.xiaoyi.ssm.interceptor.MemberAppApiInterceptor"></bean>
		</mvc:interceptor>
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>

	<!--SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的总大小不能超过20MB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="200000000" />
		<!-- 指定上传文件的临时路径 -->
		<!-- <property name="uploadTempDir" value="uploadTempDirectory" /> -->
	</bean>

	<!-- 所有缓存初始化 -->
	<bean class="com.xiaoyi.ssm.util.SpringUtils" />

	<!-- 线程池配置 -->
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 线程池维护线程的最少数量 -->
		<property name="corePoolSize" value="5" />
		<!-- 允许的空闲时间 -->
		<property name="keepAliveSeconds" value="200" />
		<!-- 线程池维护线程的最大数量 -->
		<property name="maxPoolSize" value="10" />
		<!-- 缓存队列 -->
		<property name="queueCapacity" value="20" />
		<!-- 对拒绝task的处理策略 -->
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>
	
	<!-- 所有缓存初始化 -->
	<bean id="SmsInit" class="com.xiaoyi.ssm.init.SmsInit"></bean>
</beans>