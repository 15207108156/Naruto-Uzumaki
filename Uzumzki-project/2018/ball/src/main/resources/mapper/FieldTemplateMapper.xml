<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyi.ssm.dao.FieldTemplateMapper">
	<resultMap id="BaseResultMap" type="com.xiaoyi.ssm.model.FieldTemplate">
		<id column="ftID" jdbcType="VARCHAR" property="id" />
		<result column="ftCreateTime" jdbcType="TIMESTAMP" property="createtime" />
		<result column="ftFieldTime" jdbcType="DATE" property="fieldtime" />
		<result column="ftVenueID" jdbcType="VARCHAR" property="venueid" />
		<result column="ftFieldID" jdbcType="VARCHAR" property="fieldid" />
		<result column="ftTemplateID" jdbcType="VARCHAR" property="templateid" />
		<association property="venueTemplate" javaType="com.xiaoyi.ssm.model.VenueTemplate">
			<id column="ID" jdbcType="CHAR" property="id" />
			<result column="CreateTime" jdbcType="DATE" property="createtime" />
			<result column="ModifyTime" jdbcType="DATE" property="modifytime" />
			<result column="VenueID" jdbcType="VARCHAR" property="venueid" />
			<result column="Name" jdbcType="VARCHAR" property="name" />
			<result column="Price" jdbcType="VARCHAR" property="price" />
		</association>
	</resultMap>
	<sql id="Base_Column_List">
		ft.ID ftID, ft.CreateTime ftCreateTime, ft.FieldTime ftFieldTime, ft.VenueID ftVenueID, ft.FieldID ftFieldID, ft.TemplateID ftTemplateID
	</sql>
	
	<select id="selectByVenueAndField" parameterType="com.xiaoyi.ssm.dto.FieldTemplateDto" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
        ,vt.* 
	    FROM
	        FieldTemplate ft 
	    LEFT JOIN
	        VenueTemplate vt  
	    ON ft.`TemplateID` = vt.`ID`
	    WHERE
	        vt.`VenueID` = #{venueid}
	        AND ft.`FieldID` = #{fieldid}
	        AND ft.`FieldTime` = #{date} LIMIT 1
	</select>
	
	<select id="selectByAll" parameterType="com.xiaoyi.ssm.model.FieldTemplate" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from FieldTemplate ft
		<where>
			<if test="createtime != null">
				AND CreateTime = #{createtime,jdbcType=TIMESTAMP}
			</if>
			<if test="fieldtime != null">
				AND FieldTime = #{fieldtime,jdbcType=DATE}
			</if>
			<if test="venueid != null">
				AND VenueID = #{venueid,jdbcType=VARCHAR}
			</if>
			<if test="fieldid != null">
				AND FieldID = #{fieldid,jdbcType=VARCHAR}
			</if>
			<if test="templateid != null">
				AND TemplateID = #{templateid,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from FieldTemplate ft
		where ID = #{id,jdbcType=VARCHAR}
	</select>
	
	<update id="updateByTemplate">
		UPDATE FieldTemplate SET TemplateID = #{nowId} WHERE TemplateID = #{oldId};
	</update>
	
	<update id="updateByVenue" >
		update FieldTemplate set VenueID = #{dateStr} where VenueID = #{venueid}
	</update>
	
	<select id="selectByNowDate" resultMap="BaseResultMap">
		SELECT 
		<include refid="Base_Column_List" />,vt.`ID` ID, vt.`Name` NAME FROM FieldTemplate ft INNER JOIN VenueTemplate vt ON ft.`TemplateID` = vt.`ID` 
		WHERE ft.VenueID = #{id} AND ft.FieldID = #{fieldid} AND ft.`FieldTime` &gt;= #{startDate} AND ft.`FieldTime` &lt;= #{endDate}
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from FieldTemplate
		where ID = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.xiaoyi.ssm.model.FieldTemplate">
		insert into FieldTemplate (ID, CreateTime, FieldTime,
		VenueID, FieldID, TemplateID
		)
		values (#{id,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{fieldtime,jdbcType=DATE},
		#{venueid,jdbcType=VARCHAR}, #{fieldid,jdbcType=VARCHAR}, #{templateid,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.xiaoyi.ssm.model.FieldTemplate">
		insert into FieldTemplate
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="createtime != null">
				CreateTime,
			</if>
			<if test="fieldtime != null">
				FieldTime,
			</if>
			<if test="venueid != null">
				VenueID,
			</if>
			<if test="fieldid != null">
				FieldID,
			</if>
			<if test="templateid != null">
				TemplateID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="fieldtime != null">
				#{fieldtime,jdbcType=DATE},
			</if>
			<if test="venueid != null">
				#{venueid,jdbcType=VARCHAR},
			</if>
			<if test="fieldid != null">
				#{fieldid,jdbcType=VARCHAR},
			</if>
			<if test="templateid != null">
				#{templateid,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.ssm.model.FieldTemplate">
		update FieldTemplate
		<set>
			<if test="createtime != null">
				CreateTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="fieldtime != null">
				FieldTime = #{fieldtime,jdbcType=DATE},
			</if>
			<if test="venueid != null">
				VenueID = #{venueid,jdbcType=VARCHAR},
			</if>
			<if test="fieldid != null">
				FieldID = #{fieldid,jdbcType=VARCHAR},
			</if>
			<if test="templateid != null">
				TemplateID = #{templateid,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xiaoyi.ssm.model.FieldTemplate">
		update FieldTemplate
		set CreateTime = #{createtime,jdbcType=TIMESTAMP},
		FieldTime = #{fieldtime,jdbcType=DATE},
		VenueID = #{venueid,jdbcType=VARCHAR},
		FieldID = #{fieldid,jdbcType=VARCHAR},
		TemplateID = #{templateid,jdbcType=VARCHAR}
		where ID = #{id,jdbcType=VARCHAR}
	</update>
</mapper>