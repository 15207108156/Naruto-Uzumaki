<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyi.ssm.dao.InviteLogMapper">
	<resultMap id="BaseResultMap" type="com.xiaoyi.ssm.model.InviteLog">
		<id column="ID" jdbcType="VARCHAR" property="id" />
		<result column="Create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="Member_id" jdbcType="VARCHAR" property="memberId" />
		<result column="InviteBall_id" jdbcType="VARCHAR" property="inviteballId" />
		<result column="Content" jdbcType="VARCHAR" property="content" />
		<result column="Type" jdbcType="INTEGER" property="type" />
		<association property="member" javaType="com.xiaoyi.ssm.model.Member">
			<id column="ID" jdbcType="CHAR" property="id" />
			<result column="mAppNickName" jdbcType="VARCHAR" property="appnickname" />
			<result column="mAppAvatarUrl" jdbcType="VARCHAR" property="appavatarurl" />
		</association>
	</resultMap>
	<sql id="Base_Column_List">
		ID, Create_time, Member_id, InviteBall_id, Content, Type
	</sql>
	
	<select id="selectByInviteAdmin" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT il.*,m.`AppNickName` mAppNickName,m.`AppAvatarUrl` mAppAvatarUrl FROM InviteLog il LEFT JOIN Member m ON il.`Member_id` = m.id
		WHERE InviteBall_id = #{id}
	</select>
	
	<select id="selectByInvite" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT il.*,m.`AppNickName` mAppNickName,m.`AppAvatarUrl` mAppAvatarUrl FROM InviteLog il LEFT JOIN Member m ON il.`Member_id` = m.id
		WHERE InviteBall_id = #{id} AND TYPE = 0
	</select>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from InviteLog
		where ID = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from InviteLog
		where ID = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.xiaoyi.ssm.model.InviteLog">
		insert into InviteLog (ID, Create_time, Member_id,
		InviteBall_id, Content, Type
		)
		values (#{id,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{memberId,jdbcType=VARCHAR},
		#{inviteballId,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.xiaoyi.ssm.model.InviteLog">
		insert into InviteLog
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="createTime != null">
				Create_time,
			</if>
			<if test="memberId != null">
				Member_id,
			</if>
			<if test="inviteballId != null">
				InviteBall_id,
			</if>
			<if test="content != null">
				Content,
			</if>
			<if test="type != null">
				Type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="memberId != null">
				#{memberId,jdbcType=VARCHAR},
			</if>
			<if test="inviteballId != null">
				#{inviteballId,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.ssm.model.InviteLog">
		update InviteLog
		<set>
			<if test="createTime != null">
				Create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="memberId != null">
				Member_id = #{memberId,jdbcType=VARCHAR},
			</if>
			<if test="inviteballId != null">
				InviteBall_id = #{inviteballId,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				Content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				Type = #{type,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xiaoyi.ssm.model.InviteLog">
		update InviteLog
		set Create_time = #{createTime,jdbcType=TIMESTAMP},
		Member_id = #{memberId,jdbcType=VARCHAR},
		InviteBall_id = #{inviteballId,jdbcType=VARCHAR},
		Content = #{content,jdbcType=VARCHAR},
		Type = #{type,jdbcType=INTEGER}
		where ID = #{id,jdbcType=VARCHAR}
	</update>
</mapper>