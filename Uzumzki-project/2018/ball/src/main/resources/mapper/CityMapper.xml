<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyi.ssm.dao.CityMapper">
	<resultMap id="BaseResultMap" type="com.xiaoyi.ssm.model.City">
		<id column="ID" jdbcType="CHAR" property="id" />
		<result column="CityNo" jdbcType="INTEGER" property="cityno" />
		<result column="City" jdbcType="VARCHAR" property="city" />
		<result column="Initial" jdbcType="CHAR" property="initial" />
		<result column="HotFlag" jdbcType="INTEGER" property="hotflag" />
		<result column="VenueSum" jdbcType="INTEGER" property="venuesum" />
	</resultMap>
	
	<sql id="Base_Column_List">
		ID, CityNo, City, Initial, HotFlag, VenueSum
	</sql>
	
	<select id="selectByAll" parameterType="com.xiaoyi.ssm.model.City" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from City
		<where>
			<if test="cityno != null and cityno != ''">
				AND CityNo = #{cityno,jdbcType=INTEGER}
			</if>
			<if test="city != null and city != ''">
				AND City = #{city,jdbcType=VARCHAR}
			</if>
			<if test="initial != null">
				AND Initial = #{initial,jdbcType=CHAR}
			</if>
		</where>
	</select>

	<select id="selectByInitial" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from City order by Initial asc
	</select>

	<select id="selectByHotCity" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from City where HotFlag = 1 limit 5
	</select>
	
	<select id="selectByName" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from City where City = #{name} limit 1
	</select>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from City
		where ID = #{id,jdbcType=CHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from City
		where ID = #{id,jdbcType=CHAR}
	</delete>
	<insert id="insert" parameterType="com.xiaoyi.ssm.model.City">
		insert into City (ID, CityNo, City,
		Initial, HotFlag, VenueSum
		)
		values (#{id,jdbcType=CHAR}, #{cityno,jdbcType=INTEGER}, #{city,jdbcType=VARCHAR},
		#{initial,jdbcType=CHAR}, #{hotflag,jdbcType=INTEGER}, #{venuesum,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.xiaoyi.ssm.model.City">
		insert into City
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="cityno != null">
				CityNo,
			</if>
			<if test="city != null">
				City,
			</if>
			<if test="initial != null">
				Initial,
			</if>
			<if test="hotflag != null">
				HotFlag,
			</if>
			<if test="venuesum != null">
				VenueSum,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=CHAR},
			</if>
			<if test="cityno != null">
				#{cityno,jdbcType=INTEGER},
			</if>
			<if test="city != null">
				#{city,jdbcType=VARCHAR},
			</if>
			<if test="initial != null">
				#{initial,jdbcType=CHAR},
			</if>
			<if test="hotflag != null">
				#{hotflag,jdbcType=INTEGER},
			</if>
			<if test="venuesum != null">
				#{venuesum,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.ssm.model.City">
		update City
		<set>
			<if test="cityno != null">
				CityNo = #{cityno,jdbcType=INTEGER},
			</if>
			<if test="city != null">
				City = #{city,jdbcType=VARCHAR},
			</if>
			<if test="initial != null">
				Initial = #{initial,jdbcType=CHAR},
			</if>
			<if test="hotflag != null">
				HotFlag = #{hotflag,jdbcType=INTEGER},
			</if>
			<if test="venuesum != null">
				VenueSum = #{venuesum,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xiaoyi.ssm.model.City">
		update City
		set CityNo = #{cityno,jdbcType=INTEGER},
		City = #{city,jdbcType=VARCHAR},
		Initial = #{initial,jdbcType=CHAR},
		HotFlag = #{hotflag,jdbcType=INTEGER},
		VenueSum = #{venuesum,jdbcType=INTEGER}
		where ID = #{id,jdbcType=CHAR}
	</update>
</mapper>