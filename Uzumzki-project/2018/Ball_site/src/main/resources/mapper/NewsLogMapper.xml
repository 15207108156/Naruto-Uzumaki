<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyi.ssm.dao.NewsLogMapper">
	<resultMap id="BaseResultMap" type="com.xiaoyi.ssm.model.NewsLog">
		<id column="ID" jdbcType="CHAR" property="id" />
		<result column="Create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="News_id" jdbcType="VARCHAR" property="newsId" />
		<result column="Staff_id" jdbcType="VARCHAR" property="staffId" />
		<result column="Content" jdbcType="VARCHAR" property="content" />
		<association property="staff" javaType="com.xiaoyi.ssm.model.Staff">
			<id property="id" column="ID" />
			<result column="sName" property="name" />
		</association>
	</resultMap>
	<sql id="Base_Column_List">
		ID, Create_time, News_id, Staff_id, Content
	</sql>
	
	<select id="countByNews" parameterType="java.lang.String" resultType="Integer">
		select count(0) from NewsLog where News_id = #{id}
	</select>
	
	<select id="selectByNews" parameterType="java.lang.String" resultMap="BaseResultMap">
		select nl.*,s.Name sName from NewsLog nl LEFT JOIN Staff s ON nl.`Staff_id` = s.`ID` where nl.News_id = #{id,jdbcType=CHAR} ORDER BY Create_time DESC
	</select>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from NewsLog
		where ID = #{id,jdbcType=CHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from NewsLog
		where ID = #{id,jdbcType=CHAR}
	</delete>
	<insert id="insert" parameterType="com.xiaoyi.ssm.model.NewsLog">
		insert into NewsLog (ID, Create_time, News_id,
		Staff_id, Content)
		values (#{id,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{newsId,jdbcType=VARCHAR},
		#{staffId,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.xiaoyi.ssm.model.NewsLog">
		insert into NewsLog
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="createTime != null">
				Create_time,
			</if>
			<if test="newsId != null">
				News_id,
			</if>
			<if test="staffId != null">
				Staff_id,
			</if>
			<if test="content != null">
				Content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=CHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="newsId != null">
				#{newsId,jdbcType=VARCHAR},
			</if>
			<if test="staffId != null">
				#{staffId,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.ssm.model.NewsLog">
		update NewsLog
		<set>
			<if test="createTime != null">
				Create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="newsId != null">
				News_id = #{newsId,jdbcType=VARCHAR},
			</if>
			<if test="staffId != null">
				Staff_id = #{staffId,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				Content = #{content,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xiaoyi.ssm.model.NewsLog">
		update NewsLog
		set Create_time = #{createTime,jdbcType=TIMESTAMP},
		News_id = #{newsId,jdbcType=VARCHAR},
		Staff_id = #{staffId,jdbcType=VARCHAR},
		Content = #{content,jdbcType=VARCHAR}
		where ID = #{id,jdbcType=CHAR}
	</update>
</mapper>