<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyi.ssm.dao.OrderMapper">
	<resultMap id="BaseResultMap" type="com.xiaoyi.ssm.model.Order">
		<id column="ID" jdbcType="CHAR" property="id" />
		<result column="OrderNO" jdbcType="INTEGER" property="orderno" />
		<result column="CreateTime" jdbcType="TIMESTAMP" property="createtime" />
		<result column="ModifyTime" jdbcType="TIMESTAMP" property="modifytime" />
		<result column="OrderDate" jdbcType="DATE" property="orderdate" />
		<result column="VenueID" jdbcType="VARCHAR" property="venueid" />
		<result column="MemberID" jdbcType="VARCHAR" property="memberid" />
		<result column="CoachID" jdbcType="VARCHAR" property="coachid" />
		<result column="CoachAmount" jdbcType="DOUBLE" property="coachamount" />
		<result column="Price" jdbcType="DOUBLE" property="price" />
		<result column="Show_price" jdbcType="DOUBLE" property="showPrice" />
		<result column="Price_fee" jdbcType="DOUBLE" property="priceFee" />
		<result column="TimeSum" jdbcType="DOUBLE" property="timesum" />
		<result column="Type" jdbcType="INTEGER" property="type" />
		<result column="PayTime" jdbcType="TIMESTAMP" property="paytime" />
		<result column="PayType" jdbcType="INTEGER" property="paytype" />
		<result column="PayRemark" jdbcType="VARCHAR" property="payremark" />
		<result column="ConfirmTime" jdbcType="TIMESTAMP" property="confirmtime" />
		<result column="CancelTime" jdbcType="TIMESTAMP" property="canceltime" />
		<result column="ApplyTime" jdbcType="TIMESTAMP" property="applytime" />
		<result column="RefundTime" jdbcType="TIMESTAMP" property="refundtime" />
		<result column="AmountID" jdbcType="VARCHAR" property="amountid" />
		<result column="AmountType" jdbcType="INTEGER" property="amounttype" />
		<result column="DeleteFlag" jdbcType="INTEGER" property="deleteflag" />
		<result column="LineFlag" jdbcType="INTEGER" property="lineflag" />

		<association property="venue" javaType="com.xiaoyi.ssm.model.Venue">
			<id column="ID" jdbcType="VARCHAR" property="id" />
			<result column="vName" jdbcType="VARCHAR" property="name" />
			<result column="vVenueNO" jdbcType="VARCHAR" property="venueno" />
			<result column="vImage" jdbcType="VARCHAR" property="image" />
		</association>
		<association property="member" javaType="com.xiaoyi.ssm.model.Member">
			<id column="ID" jdbcType="VARCHAR" property="id" />
			<result column="mName" jdbcType="VARCHAR" property="name" />
			<result column="mMemberNo" jdbcType="VARCHAR" property="memberno" />
		</association>
		<association property="city" javaType="com.xiaoyi.ssm.model.City">
			<id column="ID" jdbcType="VARCHAR" property="id" />
			<result column="cCity" jdbcType="VARCHAR" property="city" />
		</association>
		<association property="venueRefund" javaType="com.xiaoyi.ssm.model.VenueRefund">
			<id column="vrID" jdbcType="VARCHAR" property="id" />
			<result column="vrOrder_id" jdbcType="VARCHAR" property="orderId" />
		</association>
		<collection property="reserves" ofType="Reserve" column="ID" javaType="java.util.List" select="com.xiaoyi.ssm.dao.OrderMapper.selectByReserve">
		</collection>
	</resultMap>
	<sql id="Base_Column_List">
		ID, OrderNO, CreateTime, ModifyTime, OrderDate, VenueID, MemberID, CoachID, CoachAmount,
		Price, Show_price, Price_fee, TimeSum, Type, PayTime, PayType, PayRemark, ConfirmTime,
		CancelTime, ApplyTime, RefundTime, AmountID, AmountType, DeleteFlag, LineFlag
	</sql>


	<resultMap id="ReserveMap" type="com.xiaoyi.ssm.model.Reserve">
		<id column="rID" jdbcType="CHAR" property="id" />
		<result column="rCreateTime" jdbcType="TIMESTAMP" property="createtime" />
		<result column="rFieldID" jdbcType="VARCHAR" property="fieldid" />
		<result column="rReserveTimeFrame" jdbcType="VARCHAR" property="reservetimeframe" />
		<result column="rReserveAmount" jdbcType="DOUBLE" property="reserveamount" />
		<result column="rOrderID" jdbcType="VARCHAR" property="orderid" />
		<association property="field" javaType="com.xiaoyi.ssm.model.Field">
			<id column="ID" jdbcType="VARCHAR" property="id" />
			<result column="fName" jdbcType="VARCHAR" property="name" />
		</association>
	</resultMap>

	<select id="countAmountByVenue" parameterType="java.lang.String" resultType="Double">
		SELECT IFNULL(SUM(o.`Price`),0) FROM `Order` o
		INNER JOIN
		Venue v ON
		o.`VenueID` = v.`ID` WHERE
		v.`ID` = #{venueid} AND o.`Type`
		IN (1,5,6)
	</select>

	<select id="selectByVenue" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT o.*,m.`Name` mName FROM `Order` o INNER JOIN
		Venue v
		ON o.`VenueID` = v.`ID`
		LEFT JOIN Member m ON
		o.`MemberID` = m.`ID`
		WHERE v.`ID` = #{venueid}
	</select>

	<select id="selectByMemberOrder" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT o.*, r.ID rID, r.CreateTime
		rCreateTime, r.FieldID
		rFieldID,
		r.ReserveTimeFrame
		rReserveTimeFrame,
		r.ReserveAmount
		rReserveAmount, r.OrderID rOrderID ,
		v.`Name` vName, v.`Image` vImage,
		m.`Name` mName
		FROM `Order` o INNER
		JOIN Reserve r ON o.`ID` =
		r.`OrderID`
		LEFT
		JOIN Venue v ON o.`VenueID` = v.`ID`
		LEFT JOIN Member m ON m.`ID` = o.`MemberID`
		WHERE o.`MemberID` =
		#{memberid} AND
		o.`ID` = #{orderid}
	</select>

	<select id="selectByReserve" parameterType="java.lang.String" resultMap="ReserveMap">
		SELECT r.ID rID, r.CreateTime rCreateTime,
		r.FieldID
		rFieldID, r.ReserveTimeFrame
		rReserveTimeFrame,
		r.ReserveAmount
		rReserveAmount, r.OrderID rOrderID,f.`Name` fName
		FROM Reserve r LEFT
		JOIN `Field` f ON r.`FieldID` = f.`ID` WHERE r.OrderID =
		#{id}
	</select>

	<select id="selectAll" resultMap="BaseResultMap">
		SELECT o.*, v.`Name` vName, v.`Image` vImage,vr.ID vrID,vr.Order_id vrOrder_id
		FROM `Order` o
		LEFT JOIN Venue v ON o.`VenueID` = v.`ID`
		LEFT JOIN (SELECT ID,Order_id FROM
		VenueRefund WHERE Refund_status = 0) vr ON vr.`Order_id` = o.`ID`
		WHERE o.`MemberID` = #{id}
		<if test="type == 1">
			AND o.`Type` in (0,5,6)
		</if>
		<if test="type == 2">
			AND o.`Type` in (1,2,3,4)
		</if>
		AND o.`DeleteFlag` = 0
		ORDER BY CreateTime DESC
	</select>

	<select id="selectByAll" parameterType="com.xiaoyi.ssm.model.Order" resultMap="BaseResultMap">
		SELECT o.*,v.`Name` vName,v.`VenueNO` vVenueNO,m.`Name` mName,m.`MemberNo` mMemberNo, c.`City` cCity FROM `Order`
		o LEFT JOIN Venue v ON o.`VenueID` = v.`ID` LEFT JOIN
		Member m ON
		o.`MemberID` = m.`ID`
		LEFT JOIN City c ON v.`CityID` = c.`ID`
		WHERE
		o.`Type` IN (0,1,4,5,6)
		<if test="orderno != null">
			AND o.OrderNO = #{orderno,jdbcType=INTEGER}
		</if>
		<if test="createtime != null">
			AND o.CreateTime = #{createtime,jdbcType=TIMESTAMP}
		</if>
		<if test="modifytime != null">
			AND o.ModifyTime = #{modifytime,jdbcType=TIMESTAMP}
		</if>
		<if test="orderdate != null">
			AND o.OrderDate = #{orderdate,jdbcType=DATE}
		</if>
		<if test="venueid != null">
			AND o.VenueID = #{venueid,jdbcType=VARCHAR}
		</if>
		<if test="memberid != null">
			AND o.MemberID = #{memberid,jdbcType=VARCHAR}
		</if>
		<if test="price != null">
			AND o.Price = #{price,jdbcType=DOUBLE}
		</if>
		<if test="type != null">
			AND o.Type = #{type,jdbcType=INTEGER}
		</if>
		order by o.CreateTime desc
	</select>

	<select id="selectIsOrder" parameterType="com.xiaoyi.ssm.dto.OrderDto" resultType="Integer">
		SELECT COUNT(0) FROM `Order` o INNER
		JOIN Reserve r ON
		o.`ID` =
		r.`OrderID` WHERE o.`Type` IN
		(0,1,5)
		AND o.`OrderDate` =
		#{date} AND o.`VenueID` = #{venueid}
		AND r.`FieldID` = #{fieldid} AND
		r.`ReserveTimeFrame` LIKE
		CONCAT('%',CONCAT('${time}','%'))
	</select>

	<select id="selectByAmount" resultMap="BaseResultMap">
		SELECT o.* FROM 
		(SELECT o.* FROM `Order` o LEFT JOIN AmountRefund ar ON o.`ID` = ar.`Source_id` WHERE AmountID = #{amountid}) o INNER JOIN  (
		SELECT o.`ID` FROM `Order` o LEFT JOIN AmountRefund ar ON o.`ID` = ar.`Source_id` WHERE AmountID = #{amountid} AND o.`Price` = ar.`Amount` OR ar.`Amount` = NULL)
		oar ON o.`ID` != oar.`ID` ORDER BY o.`OrderNO` DESC
	</select>

	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT o.*, r.ID rID, r.CreateTime rCreateTime,
		r.FieldID
		rFieldID,
		r.ReserveTimeFrame
		rReserveTimeFrame,
		r.ReserveAmount
		rReserveAmount, r.OrderID rOrderID , v.`Name` vName,
		v.`Image` vImage
		FROM `Order` o INNER JOIN Reserve r ON
		o.`ID` = r.`OrderID`
		LEFT JOIN
		Venue v ON
		o.`VenueID` = v.`ID` where o.ID = #{id,jdbcType=VARCHAR}
	</select>

	<select id="countByMember" parameterType="com.xiaoyi.ssm.dto.OrderDto" resultType="Integer">
		SELECT COUNT(0) FROM `Order` WHERE `MemberID` = #{memberid}
		AND Type in
		(0,5,6)
		AND
		`DeleteFlag` = 0
	</select>

	<select id="selectByTimeOut" resultMap="BaseResultMap">
		SELECT o.* FROM `Order` o
		WHERE o.`Type` = #{type} AND o.`CreateTime` &lt;= #{preTime} Order BY
		o.`CreateTime`
	</select>

	<select id="selectByPayVenue" resultMap="BaseResultMap">
		SELECT * FROM `Order`
		WHERE `Type` = 6 AND OrderDate = #{date} AND VenueID = #{venueId}
		AND AmountType = 0
	</select>

	<update id="updateByPayVenue">
		UPDATE `Order` o , (SELECT o.ID FROM `Order` o INNER JOIN Venue v ON o.VenueID = v.ID INNER JOIN
		(SELECT tt.ID FROM TrainTeam tt INNER JOIN `TrainCoach` tc ON
		tt.Train_coach_id = tc.`ID` WHERE tc.`Member_id` = #{memberId}) tt ON v.TrainTeam = tt.ID
		WHERE o.OrderDate = #{nowDate} AND
		o.AmountType = 0 AND o.`Type` IN (4,6)) dateOrder SET
		`AmountType` = 1,`AmountID` = #{amountId} WHERE o.ID = dateOrder.ID;
	</update>

	<select id="selectByDateDay" resultMap="BaseResultMap">
		SELECT * FROM `Order`
		WHERE `Type` = 1 AND OrderDate = #{date}
	</select>

	<select id="selectByRelieveVenue" resultMap="BaseResultMap">
		SELECT * FROM `Order` WHERE `Type` IN (1,5,6) AND OrderDate &gt;= #{nowDate} AND VenueID = #{venueid}
	</select>

	<select id="selectByVenueAll" resultMap="BaseResultMap">
		SELECT o.*, v.`Name` vName, v.`Image` vImage,vr.ID vrID,vr.Order_id vrOrder_id
		FROM `Order` o
		LEFT JOIN Venue v ON o.`VenueID` = v.`ID`
		LEFT JOIN (SELECT ID,Order_id FROM
		VenueRefund WHERE Refund_status = 0) vr ON vr.`Order_id` = o.`ID`
		WHERE o.`VenueID` = #{venueid}
		<if test="type == 1">
			AND o.`Type` = 5
		</if>
		<if test="type == 2">
			AND vr.ID IS NOT NULL
		</if>
		AND o.`DeleteFlag` = 0
		ORDER BY CreateTime DESC
	</select>

	<select id="selectByMemberDate" resultMap="BaseResultMap">
		SELECT o.* FROM `Order` o INNER JOIN Venue v ON o.VenueID = v.ID INNER JOIN
		(SELECT tt.ID FROM TrainTeam tt INNER JOIN `TrainCoach`
		tc ON tt.Train_coach_id = tc.`ID` WHERE tc.`Member_id` = #{memberId}) tt ON v.TrainTeam = tt.ID
		WHERE o.OrderDate = #{nowDate} AND
		o.AmountType = 0 AND o.`Type` = 6
	</select>

	<update id="updateByOrdertype">
		UPDATE `Order` o , (SELECT o.ID FROM `Order` o INNER JOIN Venue v ON o.VenueID = v.ID INNER JOIN
		(SELECT tt.ID FROM TrainTeam tt INNER JOIN `TrainCoach` tc ON
		tt.Train_coach_id = tc.`ID` WHERE tc.`Member_id` = #{memberId}) tt ON v.TrainTeam = tt.ID
		WHERE o.OrderDate = #{nowDate} AND
		o.`Type` = 6) dateOrder SET `Type` = 1 WHERE o.ID =
		dateOrder.ID;
	</update>

	<select id="selectBySearch" parameterType="com.xiaoyi.ssm.dto.AdminOrderDto" resultMap="BaseResultMap">
		SELECT o.*,v.`Name` vName,v.`VenueNO` vVenueNO,m.`Name` mName,m.`MemberNo` mMemberNo, c.`City` cCity,vr.ID vrID,vr.Order_id vrOrder_id FROM `Order` o
		LEFT JOIN Venue v ON o.`VenueID` = v.`ID`
		LEFT JOIN Member m ON o.`MemberID` = m.`ID`
		LEFT JOIN City c ON v.`CityID` = c.`ID`
		LEFT JOIN (SELECT ID,Order_id FROM VenueRefund WHERE Refund_status = 0) vr ON vr.`Order_id` = o.`ID`
		<where>
			<if test="selectType == 0">
				<if test="orderType != null">
					o.`Type` = #{orderType}
				</if>
				<if test="orderType == null">
					o.`Type` IN (0,1,4,5,6)
				</if>
			</if>
			<if test="selectType == 1">
				o.OrderDate = #{dateStr}
			</if>
		</where>
		ORDER BY o.CreateTime DESC
	</select>


	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from `Order`
		where ID = #{id,jdbcType=CHAR}
	</delete>
	<insert id="insert" parameterType="com.xiaoyi.ssm.model.Order">
		insert into `Order` (ID, OrderNO, CreateTime,
		ModifyTime, OrderDate, VenueID,
		MemberID, CoachID, CoachAmount,
		Price, Show_price, Price_fee,
		TimeSum, Type, PayTime,
		PayType, PayRemark, ConfirmTime,
		CancelTime, ApplyTime, RefundTime,
		AmountID, AmountType, DeleteFlag,
		LineFlag)
		values (#{id,jdbcType=CHAR}, #{orderno,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP},
		#{modifytime,jdbcType=TIMESTAMP}, #{orderdate,jdbcType=DATE}, #{venueid,jdbcType=VARCHAR},
		#{memberid,jdbcType=VARCHAR}, #{coachid,jdbcType=VARCHAR}, #{coachamount,jdbcType=DOUBLE},
		#{price,jdbcType=DOUBLE}, #{showPrice,jdbcType=DOUBLE}, #{priceFee,jdbcType=DOUBLE},
		#{timesum,jdbcType=DOUBLE}, #{type,jdbcType=INTEGER}, #{paytime,jdbcType=TIMESTAMP},
		#{paytype,jdbcType=INTEGER}, #{payremark,jdbcType=VARCHAR}, #{confirmtime,jdbcType=TIMESTAMP},
		#{canceltime,jdbcType=TIMESTAMP}, #{applytime,jdbcType=TIMESTAMP}, #{refundtime,jdbcType=TIMESTAMP},
		#{amountid,jdbcType=VARCHAR}, #{amounttype,jdbcType=INTEGER}, #{deleteflag,jdbcType=INTEGER},
		#{lineflag,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.xiaoyi.ssm.model.Order">
		insert into `Order`
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="orderno != null">
				OrderNO,
			</if>
			<if test="createtime != null">
				CreateTime,
			</if>
			<if test="modifytime != null">
				ModifyTime,
			</if>
			<if test="orderdate != null">
				OrderDate,
			</if>
			<if test="venueid != null">
				VenueID,
			</if>
			<if test="memberid != null">
				MemberID,
			</if>
			<if test="coachid != null">
				CoachID,
			</if>
			<if test="coachamount != null">
				CoachAmount,
			</if>
			<if test="price != null">
				Price,
			</if>
			<if test="showPrice != null">
				Show_price,
			</if>
			<if test="priceFee != null">
				Price_fee,
			</if>
			<if test="timesum != null">
				TimeSum,
			</if>
			<if test="type != null">
				Type,
			</if>
			<if test="paytime != null">
				PayTime,
			</if>
			<if test="paytype != null">
				PayType,
			</if>
			<if test="payremark != null">
				PayRemark,
			</if>
			<if test="confirmtime != null">
				ConfirmTime,
			</if>
			<if test="canceltime != null">
				CancelTime,
			</if>
			<if test="applytime != null">
				ApplyTime,
			</if>
			<if test="refundtime != null">
				RefundTime,
			</if>
			<if test="amountid != null">
				AmountID,
			</if>
			<if test="amounttype != null">
				AmountType,
			</if>
			<if test="deleteflag != null">
				DeleteFlag,
			</if>
			<if test="lineflag != null">
				LineFlag,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=CHAR},
			</if>
			<if test="orderno != null">
				#{orderno,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifytime != null">
				#{modifytime,jdbcType=TIMESTAMP},
			</if>
			<if test="orderdate != null">
				#{orderdate,jdbcType=DATE},
			</if>
			<if test="venueid != null">
				#{venueid,jdbcType=VARCHAR},
			</if>
			<if test="memberid != null">
				#{memberid,jdbcType=VARCHAR},
			</if>
			<if test="coachid != null">
				#{coachid,jdbcType=VARCHAR},
			</if>
			<if test="coachamount != null">
				#{coachamount,jdbcType=DOUBLE},
			</if>
			<if test="price != null">
				#{price,jdbcType=DOUBLE},
			</if>
			<if test="showPrice != null">
				#{showPrice,jdbcType=DOUBLE},
			</if>
			<if test="priceFee != null">
				#{priceFee,jdbcType=DOUBLE},
			</if>
			<if test="timesum != null">
				#{timesum,jdbcType=DOUBLE},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="paytime != null">
				#{paytime,jdbcType=TIMESTAMP},
			</if>
			<if test="paytype != null">
				#{paytype,jdbcType=INTEGER},
			</if>
			<if test="payremark != null">
				#{payremark,jdbcType=VARCHAR},
			</if>
			<if test="confirmtime != null">
				#{confirmtime,jdbcType=TIMESTAMP},
			</if>
			<if test="canceltime != null">
				#{canceltime,jdbcType=TIMESTAMP},
			</if>
			<if test="applytime != null">
				#{applytime,jdbcType=TIMESTAMP},
			</if>
			<if test="refundtime != null">
				#{refundtime,jdbcType=TIMESTAMP},
			</if>
			<if test="amountid != null">
				#{amountid,jdbcType=VARCHAR},
			</if>
			<if test="amounttype != null">
				#{amounttype,jdbcType=INTEGER},
			</if>
			<if test="deleteflag != null">
				#{deleteflag,jdbcType=INTEGER},
			</if>
			<if test="lineflag != null">
				#{lineflag,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.xiaoyi.ssm.model.Order">
		update `Order`
		<set>
			<if test="orderno != null">
				OrderNO = #{orderno,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				CreateTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifytime != null">
				ModifyTime = #{modifytime,jdbcType=TIMESTAMP},
			</if>
			<if test="orderdate != null">
				OrderDate = #{orderdate,jdbcType=DATE},
			</if>
			<if test="venueid != null">
				VenueID = #{venueid,jdbcType=VARCHAR},
			</if>
			<if test="memberid != null">
				MemberID = #{memberid,jdbcType=VARCHAR},
			</if>
			<if test="coachid != null">
				CoachID = #{coachid,jdbcType=VARCHAR},
			</if>
			<if test="coachamount != null">
				CoachAmount = #{coachamount,jdbcType=DOUBLE},
			</if>
			<if test="price != null">
				Price = #{price,jdbcType=DOUBLE},
			</if>
			<if test="showPrice != null">
				Show_price = #{showPrice,jdbcType=DOUBLE},
			</if>
			<if test="priceFee != null">
				Price_fee = #{priceFee,jdbcType=DOUBLE},
			</if>
			<if test="timesum != null">
				TimeSum = #{timesum,jdbcType=DOUBLE},
			</if>
			<if test="type != null">
				Type = #{type,jdbcType=INTEGER},
			</if>
			<if test="paytime != null">
				PayTime = #{paytime,jdbcType=TIMESTAMP},
			</if>
			<if test="paytype != null">
				PayType = #{paytype,jdbcType=INTEGER},
			</if>
			<if test="payremark != null">
				PayRemark = #{payremark,jdbcType=VARCHAR},
			</if>
			<if test="confirmtime != null">
				ConfirmTime = #{confirmtime,jdbcType=TIMESTAMP},
			</if>
			<if test="canceltime != null">
				CancelTime = #{canceltime,jdbcType=TIMESTAMP},
			</if>
			<if test="applytime != null">
				ApplyTime = #{applytime,jdbcType=TIMESTAMP},
			</if>
			<if test="refundtime != null">
				RefundTime = #{refundtime,jdbcType=TIMESTAMP},
			</if>
			<if test="amountid != null">
				AmountID = #{amountid,jdbcType=VARCHAR},
			</if>
			<if test="amounttype != null">
				AmountType = #{amounttype,jdbcType=INTEGER},
			</if>
			<if test="deleteflag != null">
				DeleteFlag = #{deleteflag,jdbcType=INTEGER},
			</if>
			<if test="lineflag != null">
				LineFlag = #{lineflag,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xiaoyi.ssm.model.Order">
		update `Order`
		set OrderNO = #{orderno,jdbcType=INTEGER},
		CreateTime = #{createtime,jdbcType=TIMESTAMP},
		ModifyTime = #{modifytime,jdbcType=TIMESTAMP},
		OrderDate = #{orderdate,jdbcType=DATE},
		VenueID = #{venueid,jdbcType=VARCHAR},
		MemberID = #{memberid,jdbcType=VARCHAR},
		CoachID = #{coachid,jdbcType=VARCHAR},
		CoachAmount = #{coachamount,jdbcType=DOUBLE},
		Price = #{price,jdbcType=DOUBLE},
		Show_price = #{showPrice,jdbcType=DOUBLE},
		Price_fee = #{priceFee,jdbcType=DOUBLE},
		TimeSum = #{timesum,jdbcType=DOUBLE},
		Type = #{type,jdbcType=INTEGER},
		PayTime = #{paytime,jdbcType=TIMESTAMP},
		PayType = #{paytype,jdbcType=INTEGER},
		PayRemark = #{payremark,jdbcType=VARCHAR},
		ConfirmTime = #{confirmtime,jdbcType=TIMESTAMP},
		CancelTime = #{canceltime,jdbcType=TIMESTAMP},
		ApplyTime = #{applytime,jdbcType=TIMESTAMP},
		RefundTime = #{refundtime,jdbcType=TIMESTAMP},
		AmountID = #{amountid,jdbcType=VARCHAR},
		AmountType = #{amounttype,jdbcType=INTEGER},
		DeleteFlag = #{deleteflag,jdbcType=INTEGER},
		LineFlag = #{lineflag,jdbcType=INTEGER}
		where ID = #{id,jdbcType=CHAR}
	</update>
</mapper>